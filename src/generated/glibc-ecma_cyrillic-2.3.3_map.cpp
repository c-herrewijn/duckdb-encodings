#include "generated/glibc-ecma_cyrillic-2.3.3_map.hpp"

namespace duckdb {
namespace duckdb_encodings {

// Generated from: glibc-ECMA_CYRILLIC-2.3.3.ucm
static const map_entry_encoding glibc_ECMA_CYRILLIC_2_3_3_to_utf8[] = {
    {1, "\x00", 1, "\x00"},         {1, "\x01", 1, "\x01"},     {1, "\x02", 1, "\x02"},     {1, "\x03", 1, "\x03"},
    {1, "\x04", 1, "\x04"},         {1, "\x05", 1, "\x05"},     {1, "\x06", 1, "\x06"},     {1, "\x07", 1, "\x07"},
    {1, "\x08", 1, "\x08"},         {1, "\x09", 1, "\x09"},     {1, "\x0A", 1, "\x0A"},     {1, "\x0B", 1, "\x0B"},
    {1, "\x0C", 1, "\x0C"},         {1, "\x0D", 1, "\x0D"},     {1, "\x0E", 1, "\x0E"},     {1, "\x0F", 1, "\x0F"},
    {1, "\x10", 1, "\x10"},         {1, "\x11", 1, "\x11"},     {1, "\x12", 1, "\x12"},     {1, "\x13", 1, "\x13"},
    {1, "\x14", 1, "\x14"},         {1, "\x15", 1, "\x15"},     {1, "\x16", 1, "\x16"},     {1, "\x17", 1, "\x17"},
    {1, "\x18", 1, "\x18"},         {1, "\x19", 1, "\x19"},     {1, "\x1A", 1, "\x1A"},     {1, "\x1B", 1, "\x1B"},
    {1, "\x1C", 1, "\x1C"},         {1, "\x1D", 1, "\x1D"},     {1, "\x1E", 1, "\x1E"},     {1, "\x1F", 1, "\x1F"},
    {1, "\x20", 1, "\x20"},         {1, "\x21", 1, "\x21"},     {1, "\x22", 1, "\x22"},     {1, "\x23", 1, "\x23"},
    {1, "\x24", 1, "\x24"},         {1, "\x25", 1, "\x25"},     {1, "\x26", 1, "\x26"},     {1, "\x27", 1, "\x27"},
    {1, "\x28", 1, "\x28"},         {1, "\x29", 1, "\x29"},     {1, "\x2A", 1, "\x2A"},     {1, "\x2B", 1, "\x2B"},
    {1, "\x2C", 1, "\x2C"},         {1, "\x2D", 1, "\x2D"},     {1, "\x2E", 1, "\x2E"},     {1, "\x2F", 1, "\x2F"},
    {1, "\x30", 1, "\x30"},         {1, "\x31", 1, "\x31"},     {1, "\x32", 1, "\x32"},     {1, "\x33", 1, "\x33"},
    {1, "\x34", 1, "\x34"},         {1, "\x35", 1, "\x35"},     {1, "\x36", 1, "\x36"},     {1, "\x37", 1, "\x37"},
    {1, "\x38", 1, "\x38"},         {1, "\x39", 1, "\x39"},     {1, "\x3A", 1, "\x3A"},     {1, "\x3B", 1, "\x3B"},
    {1, "\x3C", 1, "\x3C"},         {1, "\x3D", 1, "\x3D"},     {1, "\x3E", 1, "\x3E"},     {1, "\x3F", 1, "\x3F"},
    {1, "\x40", 1, "\x40"},         {1, "\x41", 1, "\x41"},     {1, "\x42", 1, "\x42"},     {1, "\x43", 1, "\x43"},
    {1, "\x44", 1, "\x44"},         {1, "\x45", 1, "\x45"},     {1, "\x46", 1, "\x46"},     {1, "\x47", 1, "\x47"},
    {1, "\x48", 1, "\x48"},         {1, "\x49", 1, "\x49"},     {1, "\x4A", 1, "\x4A"},     {1, "\x4B", 1, "\x4B"},
    {1, "\x4C", 1, "\x4C"},         {1, "\x4D", 1, "\x4D"},     {1, "\x4E", 1, "\x4E"},     {1, "\x4F", 1, "\x4F"},
    {1, "\x50", 1, "\x50"},         {1, "\x51", 1, "\x51"},     {1, "\x52", 1, "\x52"},     {1, "\x53", 1, "\x53"},
    {1, "\x54", 1, "\x54"},         {1, "\x55", 1, "\x55"},     {1, "\x56", 1, "\x56"},     {1, "\x57", 1, "\x57"},
    {1, "\x58", 1, "\x58"},         {1, "\x59", 1, "\x59"},     {1, "\x5A", 1, "\x5A"},     {1, "\x5B", 1, "\x5B"},
    {1, "\x5C", 1, "\x5C"},         {1, "\x5D", 1, "\x5D"},     {1, "\x5E", 1, "\x5E"},     {1, "\x5F", 1, "\x5F"},
    {1, "\x60", 1, "\x60"},         {1, "\x61", 1, "\x61"},     {1, "\x62", 1, "\x62"},     {1, "\x63", 1, "\x63"},
    {1, "\x64", 1, "\x64"},         {1, "\x65", 1, "\x65"},     {1, "\x66", 1, "\x66"},     {1, "\x67", 1, "\x67"},
    {1, "\x68", 1, "\x68"},         {1, "\x69", 1, "\x69"},     {1, "\x6A", 1, "\x6A"},     {1, "\x6B", 1, "\x6B"},
    {1, "\x6C", 1, "\x6C"},         {1, "\x6D", 1, "\x6D"},     {1, "\x6E", 1, "\x6E"},     {1, "\x6F", 1, "\x6F"},
    {1, "\x70", 1, "\x70"},         {1, "\x71", 1, "\x71"},     {1, "\x72", 1, "\x72"},     {1, "\x73", 1, "\x73"},
    {1, "\x74", 1, "\x74"},         {1, "\x75", 1, "\x75"},     {1, "\x76", 1, "\x76"},     {1, "\x77", 1, "\x77"},
    {1, "\x78", 1, "\x78"},         {1, "\x79", 1, "\x79"},     {1, "\x7A", 1, "\x7A"},     {1, "\x7B", 1, "\x7B"},
    {1, "\x7C", 1, "\x7C"},         {1, "\x7D", 1, "\x7D"},     {1, "\x7E", 1, "\x7E"},     {1, "\x7F", 1, "\x7F"},
    {1, "\x80", 2, "\xC2\x80"},     {1, "\x81", 2, "\xC2\x81"}, {1, "\x82", 2, "\xC2\x82"}, {1, "\x83", 2, "\xC2\x83"},
    {1, "\x84", 2, "\xC2\x84"},     {1, "\x85", 2, "\xC2\x85"}, {1, "\x86", 2, "\xC2\x86"}, {1, "\x87", 2, "\xC2\x87"},
    {1, "\x88", 2, "\xC2\x88"},     {1, "\x89", 2, "\xC2\x89"}, {1, "\x8A", 2, "\xC2\x8A"}, {1, "\x8B", 2, "\xC2\x8B"},
    {1, "\x8C", 2, "\xC2\x8C"},     {1, "\x8D", 2, "\xC2\x8D"}, {1, "\x8E", 2, "\xC2\x8E"}, {1, "\x8F", 2, "\xC2\x8F"},
    {1, "\x90", 2, "\xC2\x90"},     {1, "\x91", 2, "\xC2\x91"}, {1, "\x92", 2, "\xC2\x92"}, {1, "\x93", 2, "\xC2\x93"},
    {1, "\x94", 2, "\xC2\x94"},     {1, "\x95", 2, "\xC2\x95"}, {1, "\x96", 2, "\xC2\x96"}, {1, "\x97", 2, "\xC2\x97"},
    {1, "\x98", 2, "\xC2\x98"},     {1, "\x99", 2, "\xC2\x99"}, {1, "\x9A", 2, "\xC2\x9A"}, {1, "\x9B", 2, "\xC2\x9B"},
    {1, "\x9C", 2, "\xC2\x9C"},     {1, "\x9D", 2, "\xC2\x9D"}, {1, "\x9E", 2, "\xC2\x9E"}, {1, "\x9F", 2, "\xC2\x9F"},
    {1, "\xA0", 2, "\xC2\xA0"},     {1, "\xA1", 2, "\xD1\x92"}, {1, "\xA2", 2, "\xD1\x93"}, {1, "\xA3", 2, "\xD1\x91"},
    {1, "\xA4", 2, "\xD1\x94"},     {1, "\xA5", 2, "\xD1\x95"}, {1, "\xA6", 2, "\xD1\x96"}, {1, "\xA7", 2, "\xD1\x97"},
    {1, "\xA8", 2, "\xD1\x98"},     {1, "\xA9", 2, "\xD1\x99"}, {1, "\xAA", 2, "\xD1\x9A"}, {1, "\xAB", 2, "\xD1\x9B"},
    {1, "\xAC", 2, "\xD1\x9C"},     {1, "\xAD", 2, "\xC2\xAD"}, {1, "\xAE", 2, "\xD1\x9E"}, {1, "\xAF", 2, "\xD1\x9F"},
    {1, "\xB0", 3, "\xE2\x84\x96"}, {1, "\xB1", 2, "\xD0\x82"}, {1, "\xB2", 2, "\xD0\x83"}, {1, "\xB3", 2, "\xD0\x81"},
    {1, "\xB4", 2, "\xD0\x84"},     {1, "\xB5", 2, "\xD0\x85"}, {1, "\xB6", 2, "\xD0\x86"}, {1, "\xB7", 2, "\xD0\x87"},
    {1, "\xB8", 2, "\xD0\x88"},     {1, "\xB9", 2, "\xD0\x89"}, {1, "\xBA", 2, "\xD0\x8A"}, {1, "\xBB", 2, "\xD0\x8B"},
    {1, "\xBC", 2, "\xD0\x8C"},     {1, "\xBD", 2, "\xC2\xA4"}, {1, "\xBE", 2, "\xD0\x8E"}, {1, "\xBF", 2, "\xD0\x8F"},
    {1, "\xC0", 2, "\xD1\x8E"},     {1, "\xC1", 2, "\xD0\xB0"}, {1, "\xC2", 2, "\xD0\xB1"}, {1, "\xC3", 2, "\xD1\x86"},
    {1, "\xC4", 2, "\xD0\xB4"},     {1, "\xC5", 2, "\xD0\xB5"}, {1, "\xC6", 2, "\xD1\x84"}, {1, "\xC7", 2, "\xD0\xB3"},
    {1, "\xC8", 2, "\xD1\x85"},     {1, "\xC9", 2, "\xD0\xB8"}, {1, "\xCA", 2, "\xD0\xB9"}, {1, "\xCB", 2, "\xD0\xBA"},
    {1, "\xCC", 2, "\xD0\xBB"},     {1, "\xCD", 2, "\xD0\xBC"}, {1, "\xCE", 2, "\xD0\xBD"}, {1, "\xCF", 2, "\xD0\xBE"},
    {1, "\xD0", 2, "\xD0\xBF"},     {1, "\xD1", 2, "\xD1\x8F"}, {1, "\xD2", 2, "\xD1\x80"}, {1, "\xD3", 2, "\xD1\x81"},
    {1, "\xD4", 2, "\xD1\x82"},     {1, "\xD5", 2, "\xD1\x83"}, {1, "\xD6", 2, "\xD0\xB6"}, {1, "\xD7", 2, "\xD0\xB2"},
    {1, "\xD8", 2, "\xD1\x8C"},     {1, "\xD9", 2, "\xD1\x8B"}, {1, "\xDA", 2, "\xD0\xB7"}, {1, "\xDB", 2, "\xD1\x88"},
    {1, "\xDC", 2, "\xD1\x8D"},     {1, "\xDD", 2, "\xD1\x89"}, {1, "\xDE", 2, "\xD1\x87"}, {1, "\xDF", 2, "\xD1\x8A"},
    {1, "\xE0", 2, "\xD0\xAE"},     {1, "\xE1", 2, "\xD0\x90"}, {1, "\xE2", 2, "\xD0\x91"}, {1, "\xE3", 2, "\xD0\xA6"},
    {1, "\xE4", 2, "\xD0\x94"},     {1, "\xE5", 2, "\xD0\x95"}, {1, "\xE6", 2, "\xD0\xA4"}, {1, "\xE7", 2, "\xD0\x93"},
    {1, "\xE8", 2, "\xD0\xA5"},     {1, "\xE9", 2, "\xD0\x98"}, {1, "\xEA", 2, "\xD0\x99"}, {1, "\xEB", 2, "\xD0\x9A"},
    {1, "\xEC", 2, "\xD0\x9B"},     {1, "\xED", 2, "\xD0\x9C"}, {1, "\xEE", 2, "\xD0\x9D"}, {1, "\xEF", 2, "\xD0\x9E"},
    {1, "\xF0", 2, "\xD0\x9F"},     {1, "\xF1", 2, "\xD0\xAF"}, {1, "\xF2", 2, "\xD0\xA0"}, {1, "\xF3", 2, "\xD0\xA1"},
    {1, "\xF4", 2, "\xD0\xA2"},     {1, "\xF5", 2, "\xD0\xA3"}, {1, "\xF6", 2, "\xD0\x96"}, {1, "\xF7", 2, "\xD0\x92"},
    {1, "\xF8", 2, "\xD0\xAC"},     {1, "\xF9", 2, "\xD0\xAB"}, {1, "\xFA", 2, "\xD0\x97"}, {1, "\xFB", 2, "\xD0\xA8"},
    {1, "\xFC", 2, "\xD0\xAD"},     {1, "\xFD", 2, "\xD0\xA9"}, {1, "\xFE", 2, "\xD0\xA7"}, {1, "\xFF", 2, "\xD0\xAA"},
};
void Glibc_ecma_cyrillic_2_3_3ToUtf::Register(const DBConfig &config) {
	const Glibc_ecma_cyrillic_2_3_3ToUtf generated_function;
	const EncodingFunction function(generated_function.name, GeneratedEncodedFunction::Decode,
	                                generated_function.max_bytes_per_byte, generated_function.lookup_bytes,
	                                glibc_ECMA_CYRILLIC_2_3_3_to_utf8, generated_function.size);
	config.RegisterEncodeFunction(function);
}
} // namespace duckdb_encodings
} // namespace duckdb
