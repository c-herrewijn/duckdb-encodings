//===----------------------------------------------------------------------===//
//
//                         DuckDB - Encodings
//
// generated/IBM290_map.hpp
//
//
//===----------------------------------------------------------------------===//

// !!!!!!!
// WARNING: this file is autogenerated by scripts/converter.py, manual changes will be overwritten
// !!!!!!!

#pragma once

#include "duckdb/main/config.hpp"
#include "duckdb/function/encoding_function.hpp"
#include "generated_encoded_function.hpp"

namespace duckdb {
namespace duckdb_encodings {

class Ibm290ToUtf {
public:
	Ibm290ToUtf() {};
	const idx_t lookup_bytes = 1;
	const idx_t max_bytes_per_byte = 3;
	const string name = "IBM290";
	// Generated from: glibc-IBM290-2.1.2.ucm
	static constexpr map_entry IBM290_to_utf8[] = {
	    {1, "\x00", 1, "\x00"},         {1, "\x01", 1, "\x01"},         {1, "\x02", 1, "\x02"},
	    {1, "\x03", 1, "\x03"},         {1, "\x04", 2, "\xC2\x9C"},     {1, "\x05", 1, "\x09"},
	    {1, "\x06", 2, "\xC2\x86"},     {1, "\x07", 1, "\x7F"},         {1, "\x08", 2, "\xC2\x97"},
	    {1, "\x09", 2, "\xC2\x8D"},     {1, "\x0A", 2, "\xC2\x8E"},     {1, "\x0B", 1, "\x0B"},
	    {1, "\x0C", 1, "\x0C"},         {1, "\x0D", 1, "\x0D"},         {1, "\x0E", 1, "\x0E"},
	    {1, "\x0F", 1, "\x0F"},         {1, "\x10", 1, "\x10"},         {1, "\x11", 1, "\x11"},
	    {1, "\x12", 1, "\x12"},         {1, "\x13", 1, "\x13"},         {1, "\x14", 2, "\xC2\x9D"},
	    {1, "\x15", 2, "\xC2\x85"},     {1, "\x16", 1, "\x08"},         {1, "\x17", 2, "\xC2\x87"},
	    {1, "\x18", 1, "\x18"},         {1, "\x19", 1, "\x19"},         {1, "\x1A", 2, "\xC2\x92"},
	    {1, "\x1B", 2, "\xC2\x8F"},     {1, "\x1C", 1, "\x1C"},         {1, "\x1D", 1, "\x1D"},
	    {1, "\x1E", 1, "\x1E"},         {1, "\x1F", 1, "\x1F"},         {1, "\x20", 2, "\xC2\x80"},
	    {1, "\x21", 2, "\xC2\x81"},     {1, "\x22", 2, "\xC2\x82"},     {1, "\x23", 2, "\xC2\x83"},
	    {1, "\x24", 2, "\xC2\x84"},     {1, "\x25", 1, "\x0A"},         {1, "\x26", 1, "\x17"},
	    {1, "\x27", 1, "\x1B"},         {1, "\x28", 2, "\xC2\x88"},     {1, "\x29", 2, "\xC2\x89"},
	    {1, "\x2A", 2, "\xC2\x8A"},     {1, "\x2B", 2, "\xC2\x8B"},     {1, "\x2C", 2, "\xC2\x8C"},
	    {1, "\x2D", 1, "\x05"},         {1, "\x2E", 1, "\x06"},         {1, "\x2F", 1, "\x07"},
	    {1, "\x30", 2, "\xC2\x90"},     {1, "\x31", 2, "\xC2\x91"},     {1, "\x32", 1, "\x16"},
	    {1, "\x33", 2, "\xC2\x93"},     {1, "\x34", 2, "\xC2\x94"},     {1, "\x35", 2, "\xC2\x95"},
	    {1, "\x36", 2, "\xC2\x96"},     {1, "\x37", 1, "\x04"},         {1, "\x38", 2, "\xC2\x98"},
	    {1, "\x39", 2, "\xC2\x99"},     {1, "\x3A", 2, "\xC2\x9A"},     {1, "\x3B", 2, "\xC2\x9B"},
	    {1, "\x3C", 1, "\x14"},         {1, "\x3D", 1, "\x15"},         {1, "\x3E", 2, "\xC2\x9E"},
	    {1, "\x3F", 1, "\x1A"},         {1, "\x40", 1, "\x20"},         {1, "\x41", 3, "\xE3\x80\x82"},
	    {1, "\x42", 3, "\xE3\x80\x8C"}, {1, "\x43", 3, "\xE3\x80\x8D"}, {1, "\x44", 3, "\xE3\x80\x81"},
	    {1, "\x45", 3, "\xE3\x83\xBB"}, {1, "\x46", 3, "\xE3\x83\xB2"}, {1, "\x47", 3, "\xE3\x82\xA1"},
	    {1, "\x48", 3, "\xE3\x82\xA3"}, {1, "\x49", 3, "\xE3\x82\xA5"}, {1, "\x4A", 2, "\xC2\xA3"},
	    {1, "\x4B", 1, "\x2E"},         {1, "\x4C", 1, "\x3C"},         {1, "\x4D", 1, "\x28"},
	    {1, "\x4E", 1, "\x2B"},         {1, "\x4F", 1, "\x7C"},         {1, "\x50", 1, "\x26"},
	    {1, "\x51", 3, "\xE3\x82\xA7"}, {1, "\x52", 3, "\xE3\x82\xA9"}, {1, "\x53", 3, "\xE3\x83\xA3"},
	    {1, "\x54", 3, "\xE3\x83\xA5"}, {1, "\x55", 3, "\xE3\x83\xA7"}, {1, "\x56", 3, "\xE3\x83\x83"},
	    {1, "\x58", 3, "\xE3\x83\xBC"}, {1, "\x5A", 1, "\x21"},         {1, "\x5B", 2, "\xC2\xA5"},
	    {1, "\x5C", 1, "\x2A"},         {1, "\x5D", 1, "\x29"},         {1, "\x5E", 1, "\x3B"},
	    {1, "\x5F", 2, "\xC2\xAC"},     {1, "\x60", 1, "\x2D"},         {1, "\x61", 1, "\x2F"},
	    {1, "\x6A", 2, "\xC2\xA6"},     {1, "\x6B", 1, "\x2C"},         {1, "\x6C", 1, "\x25"},
	    {1, "\x6D", 1, "\x5F"},         {1, "\x6E", 1, "\x3E"},         {1, "\x6F", 1, "\x3F"},
	    {1, "\x79", 1, "\x60"},         {1, "\x7A", 1, "\x3A"},         {1, "\x7B", 1, "\x23"},
	    {1, "\x7C", 1, "\x40"},         {1, "\x7D", 1, "\x27"},         {1, "\x7E", 1, "\x3D"},
	    {1, "\x7F", 1, "\x22"},         {1, "\x81", 3, "\xE3\x82\xA2"}, {1, "\x82", 3, "\xE3\x82\xA4"},
	    {1, "\x83", 3, "\xE3\x82\xA6"}, {1, "\x84", 3, "\xE3\x82\xA8"}, {1, "\x85", 3, "\xE3\x82\xAA"},
	    {1, "\x86", 3, "\xE3\x82\xAB"}, {1, "\x87", 3, "\xE3\x82\xAD"}, {1, "\x88", 3, "\xE3\x82\xAF"},
	    {1, "\x89", 3, "\xE3\x82\xB1"}, {1, "\x8A", 3, "\xE3\x82\xB3"}, {1, "\x8C", 3, "\xE3\x82\xB5"},
	    {1, "\x8D", 3, "\xE3\x82\xB7"}, {1, "\x8E", 3, "\xE3\x82\xB9"}, {1, "\x8F", 3, "\xE3\x82\xBB"},
	    {1, "\x90", 3, "\xE3\x82\xBD"}, {1, "\x91", 3, "\xE3\x82\xBF"}, {1, "\x92", 3, "\xE3\x83\x81"},
	    {1, "\x93", 3, "\xE3\x83\x84"}, {1, "\x94", 3, "\xE3\x83\x86"}, {1, "\x95", 3, "\xE3\x83\x88"},
	    {1, "\x96", 3, "\xE3\x83\x8A"}, {1, "\x97", 3, "\xE3\x83\x8B"}, {1, "\x98", 3, "\xE3\x83\x8C"},
	    {1, "\x99", 3, "\xE3\x83\x8D"}, {1, "\x9A", 3, "\xE3\x83\x8E"}, {1, "\x9D", 3, "\xE3\x83\x8F"},
	    {1, "\x9E", 3, "\xE3\x83\x92"}, {1, "\x9F", 3, "\xE3\x83\x95"}, {1, "\xA1", 3, "\xE2\x80\xBE"},
	    {1, "\xA2", 3, "\xE3\x83\x98"}, {1, "\xA3", 3, "\xE3\x83\x9B"}, {1, "\xA4", 3, "\xE3\x83\x9E"},
	    {1, "\xA5", 3, "\xE3\x83\x9F"}, {1, "\xA6", 3, "\xE3\x83\xA0"}, {1, "\xA7", 3, "\xE3\x83\xA1"},
	    {1, "\xA8", 3, "\xE3\x83\xA2"}, {1, "\xA9", 3, "\xE3\x83\xA4"}, {1, "\xAA", 3, "\xE3\x83\xA6"},
	    {1, "\xAC", 3, "\xE3\x83\xA8"}, {1, "\xAD", 3, "\xE3\x83\xA9"}, {1, "\xAE", 3, "\xE3\x83\xAA"},
	    {1, "\xAF", 3, "\xE3\x83\xAB"}, {1, "\xBA", 3, "\xE3\x83\xAC"}, {1, "\xBB", 3, "\xE3\x83\xAD"},
	    {1, "\xBC", 3, "\xE3\x83\xAF"}, {1, "\xBD", 3, "\xE3\x83\xB3"}, {1, "\xBE", 3, "\xE3\x82\x9B"},
	    {1, "\xBF", 3, "\xE3\x82\x9C"}, {1, "\xC1", 1, "\x41"},         {1, "\xC2", 1, "\x42"},
	    {1, "\xC3", 1, "\x43"},         {1, "\xC4", 1, "\x44"},         {1, "\xC5", 1, "\x45"},
	    {1, "\xC6", 1, "\x46"},         {1, "\xC7", 1, "\x47"},         {1, "\xC8", 1, "\x48"},
	    {1, "\xC9", 1, "\x49"},         {1, "\xD1", 1, "\x4A"},         {1, "\xD2", 1, "\x4B"},
	    {1, "\xD3", 1, "\x4C"},         {1, "\xD4", 1, "\x4D"},         {1, "\xD5", 1, "\x4E"},
	    {1, "\xD6", 1, "\x4F"},         {1, "\xD7", 1, "\x50"},         {1, "\xD8", 1, "\x51"},
	    {1, "\xD9", 1, "\x52"},         {1, "\xE0", 1, "\x24"},         {1, "\xE2", 1, "\x53"},
	    {1, "\xE3", 1, "\x54"},         {1, "\xE4", 1, "\x55"},         {1, "\xE5", 1, "\x56"},
	    {1, "\xE6", 1, "\x57"},         {1, "\xE7", 1, "\x58"},         {1, "\xE8", 1, "\x59"},
	    {1, "\xE9", 1, "\x5A"},         {1, "\xF0", 1, "\x30"},         {1, "\xF1", 1, "\x31"},
	    {1, "\xF2", 1, "\x32"},         {1, "\xF3", 1, "\x33"},         {1, "\xF4", 1, "\x34"},
	    {1, "\xF5", 1, "\x35"},         {1, "\xF6", 1, "\x36"},         {1, "\xF7", 1, "\x37"},
	    {1, "\xF8", 1, "\x38"},         {1, "\xF9", 1, "\x39"},         {1, "\xFF", 2, "\xC2\x9F"},
	};
	static void Register(const DBConfig &config) {
		const Ibm290ToUtf generated_function;
		const EncodingFunction function(generated_function.name, GeneratedEncodedFunction::Decode,
		                                generated_function.max_bytes_per_byte, generated_function.lookup_bytes,
		                                reinterpret_cast<uintptr_t>(&IBM290_to_utf8), std::size(IBM290_to_utf8));
		config.RegisterEncodeFunction(function);
	}
};
} // namespace duckdb_encodings
} // namespace duckdb
